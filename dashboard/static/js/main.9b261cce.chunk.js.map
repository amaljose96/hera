{"version":3,"sources":["serviceWorker.js","HeraDashboard/styles.js","HeraDashboard/colors.js","HeraDashboard/Components/Header/styles.js","HeraDashboard/Components/Header/index.js","HeraDashboard/Components/Body/styles.js","HeraDashboard/Pages/ActionBrowser/styles.js","HeraDashboard/Pages/ActionBrowser/FilterBar/styles.js","HeraDashboard/utils.js","HeraDashboard/Pages/ActionBrowser/FilterBar/index.js","HeraDashboard/Pages/ActionBrowser/service.js","HeraDashboard/Pages/ActionBrowser/ActionsList/styles.js","HeraDashboard/Pages/ActionBrowser/ActionsList/ActionLine/styles.js","HeraDashboard/Pages/ActionBrowser/ActionsList/ActionLine/index.js","HeraDashboard/Pages/ActionBrowser/ActionsList/index.js","HeraDashboard/Pages/ActionBrowser/ActionDetails/styles.js","HeraDashboard/Pages/ActionBrowser/ActionDetails/ActionSummary/styles.js","HeraDashboard/Pages/ActionBrowser/ActionDetails/ActionSummary/index.js","HeraDashboard/Pages/ActionBrowser/ActionDetails/LogsList/styles.js","HeraDashboard/Pages/ActionBrowser/ActionDetails/LogsList/LogLine/styles.js","HeraDashboard/Pages/ActionBrowser/ActionDetails/LogsList/LogLine/index.js","HeraDashboard/Pages/ActionBrowser/ActionDetails/LogsList/index.js","HeraDashboard/Pages/ActionBrowser/ActionDetails/index.js","HeraDashboard/Pages/ActionBrowser/index.js","HeraDashboard/Pages/APIHealth/styles.js","HeraDashboard/Pages/APIHealth/index.js","HeraDashboard/Components/Body/index.js","HeraDashboard/index.js","index.js"],"names":["Boolean","window","location","hostname","match","AppContainer","styled","div","getColor","r","Date","now","g","b","toString","length","HeaderContainer","LogoContainer","TabsContainer","Tab","props","active","Header","currentTab","setCurrentTab","onClick","BodyContainer","ActionBrowserContainer","ActionBrowserBody","FilterBarContainer","CondensedFitlerText","FilterSwitch","FilterForm","FormElement","FormLabel","FormValue","LiveModeContainer","LiveCircle","getDurationText","duration","printDateTime","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","FilterBar","searchParameters","setSearchParamters","isLiveMode","setLiveMode","useState","isCollapsed","setCollapsedState","isLive","string","start","end","urlKeyword","traceId","getSearchParameterString","selected","onChange","getTime","showTimeSelect","timeFormat","timeIntervals","minDate","setDate","maxDate","timeCaption","dateFormat","value","e","target","resultsLimit","getActions","searchParamters","Axios","get","params","then","response","data","results","ActionsListContainer","ActionLineContainer","Time","TraceId","Endpoint","Status","good","APICalls","TimeTaken","ActionLine","action","endTime","logs","NODE_INITIATED","method","url","NODE_COMPLETE","NODE_FAILED","responseCode","Object","keys","filter","type","includes","timeTaken","ActionsList","actions","selectedAction","setSelectedAction","values","sort","a","accurateTime","map","ActionDetailsContainer","ActionTraceId","ActionSummaryContainer","Title","Info","Label","Value","ActionSummary","request","src","name","log","LogsListContainer","LogLineContainer","LogHeader","Type","LogBody","LogLine","collapsed","headers","getResponseBody","LogsList","ActionDetails","setAction","useEffect","recievedActions","console","ActionBrowser","setHours","setSearchParameters","setActions","liveFetcher","setLiveFetcher","clearInterval","setInterval","APIHealthContainer","APIHealth","Body","HeraDashboard","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9b261cce.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import styled from 'styled-components';\n\nexport const AppContainer=styled.div`\n    top:0;\n    left:0;\n    position:absolute;\n    width:100vw;\n    height:100vh;\n`;","function RGBToHex(r,g,b) {\n     r = (r).toString(16);\n    g = (g).toString(16);\n    b = (b).toString(16);\n  \n    if (r.length == 1)\n      r = \"0\" + r;\n    if (g.length == 1)\n      g = \"0\" + g;\n    if (b.length == 1)\n      b = \"0\" + b;\n  \n    return \"#\" + r + g + b;\n  }\n\nexport function getColor(){\n    return RGBToHex(Date.now()%200,(Date.now()+83)%200,(Date.now()+159)%200);\n}","import styled from \"styled-components\";\nimport { getColor } from \"../../colors\";\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  background-image: linear-gradient(${getColor()}dd, ${getColor()});\n`;\nexport const LogoContainer = styled.div`\n  width: 125px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 18px;\n  color: #fff;\n`;\nexport const TabsContainer = styled.div`\n  margin: 7px 10px 0px 10px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-start;\n`;\nexport const Tab = styled.div`\n  background-color: ${(props) => (props.active ? \"#fff\" : \"#fffa\")};\n  padding: 7px 13px;\n  margin: 0px 2px;\n  font-size:12px;\n`;\n","import React from \"react\";\nimport { HeaderContainer, LogoContainer, TabsContainer, Tab } from \"./styles\";\nfunction Header({ currentTab, setCurrentTab }) {\n  return (\n    <HeaderContainer>\n      <LogoContainer>HERA</LogoContainer>\n      <TabsContainer>\n        <Tab\n          active={currentTab === \"actionBrowser\"}\n          onClick={() => {\n            setCurrentTab(\"actionBrowser\");\n          }}\n        >\n          Action Browser\n        </Tab>\n        <Tab\n          active={currentTab === \"performanceAnalysis\"}\n          onClick={() => {\n            setCurrentTab(\"performanceAnalysis\");\n          }}\n        >\n          Performance Analysis\n        </Tab>\n        <Tab\n          active={currentTab === \"apiHealth\"}\n          onClick={() => {\n            setCurrentTab(\"apiHealth\");\n          }}\n        >\n          API Health\n        </Tab>\n      </TabsContainer>\n    </HeaderContainer>\n  );\n}\nexport default Header;\n","import styled from 'styled-components';\nexport const BodyContainer=styled.div`\n    height:100%;\n`;","import styled from \"styled-components\";\n\nexport const ActionBrowserContainer = styled.div`\n  height: 100%;\n`;\nexport const ActionBrowserBody = styled.div`\n  height: 100%;\n  display: flex;\n`;\n","import styled from 'styled-components';\nimport { getColor } from '../../../colors';\n\nexport const FilterBarContainer=styled.div`\n    display:flex;\n    border-bottom:solid 1px ${getColor()};\n    justify-content:space-between;\n    align-items:center;\n`;\nexport const CondensedFitlerText=styled.div`\n    margin-left:10px;\n    font-size:14px;\n    padding:5px;\n`;\nexport const FilterSwitch=styled.div`\n    margin:0px 10px;\n    color:${getColor()}aa;\n    font-size:12px;\n    transition:all 0.2s;\n    font-weight:bold;\n    :hover{\n        cursor:pointer;\n        color:${getColor()};\n    }\n`;\nexport const FilterForm=styled.div`\n    display:flex;\n    align-items:center;\n    height:100%;\n`;\n\nexport const FormElement=styled.div`\n    padding:0px 10px;\n    display:flex;\n    align-items:center;\n    height:100%;\n`;\nexport const FormLabel=styled.div`\n    font-size:12px;\n    margin-right:15px;\n`;\nexport const FormValue=styled.div`\ndisplay:flex;\nalign-items:center;\n    input{\n        width:170px;\n        font-size:14px;\n        border:none;\n        outline:none;\n        padding:10px;\n        :hover{\n            cursor:pointer;\n        }\n        background-color:${getColor()}22;\n    }\n`;\nexport const LiveModeContainer = styled.div`\n    display:flex;\n    align-items:center;\n    color:#dd0000;\n    heightL100%;\n    padding:0px 20px;\n`;\nexport const LiveCircle = styled.div`\n    height:10px;\n    width:10px;\n    background-color:#dd0000;\n    margin-right:5px;\n    border-radius:50%;\n`;","export function getDurationText(duration) {\n  if (duration < 1000) {\n    return duration + \"ms\";\n  } else if (duration < 60 * 1000) {\n    return duration / 1000 + \"s\";\n  }\n}\nexport function printDateTime(date) {\n  date = new Date(date);\n  return (\n    date.getFullYear() +\n    \"-\" +\n    date.getMonth() +\n    \"-\" +\n    date.getDate() +\n    \" \" +\n    date.getHours() +\n    \":\" +\n    date.getMinutes() +\n    \":\" +\n    date.getSeconds() +\n    \":\" +\n    date.getMilliseconds()\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  FilterBarContainer,\n  CondensedFitlerText,\n  FilterSwitch,\n  FilterForm,\n  FormElement,\n  FormLabel,\n  FormValue,\n  LiveModeContainer,\n  LiveCircle,\n} from \"./styles\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { printDateTime } from \"../../../utils\";\n\n\nfunction getSearchParameterString(searchParameters,isLive) {\n    let string=\"Showing \"+(isLive?\"live \":\"\")+\"data from \"+printDateTime(searchParameters.start)+\" to \"+printDateTime(searchParameters.end);\n    if(searchParameters.urlKeyword){\n        string=string+\" with url keyword \"+searchParameters.urlKeyword\n    }\n    if(searchParameters.traceId){\n        string=string+\" (traceId : \"+searchParameters.traceId+\" )\";\n    }\n  return string+\".\";\n}\n\nfunction FilterBar({\n  searchParameters,\n  setSearchParamters,\n  isLiveMode,\n  setLiveMode,\n}) {\n  const [isCollapsed, setCollapsedState] = useState(true);\n  if (isCollapsed) {\n    return (\n      <FilterBarContainer>\n          <CondensedFitlerText>\n        {getSearchParameterString(searchParameters,isLiveMode)}\n        </CondensedFitlerText>\n        <FilterSwitch\n          onClick={() => {\n            setCollapsedState(false);\n          }}\n        >\n          Show Filters\n        </FilterSwitch>\n      </FilterBarContainer>\n    );\n  } else {\n    return (\n      <FilterBarContainer>\n        <FilterForm>\n          {isLiveMode ? (\n            <LiveModeContainer>\n              <LiveCircle />\n              Live\n            </LiveModeContainer>\n          ) : (\n            <FilterSwitch onClick={() => setLiveMode(true)}>\n              Go Live\n            </FilterSwitch>\n          )}\n          <FormElement>\n            <FormLabel>Start</FormLabel>\n            <FormValue>\n              <DatePicker\n                selected={searchParameters.start}\n                onChange={(date) => {\n                  setLiveMode(false);\n                  setSearchParamters({ ...searchParameters, start: new Date(date).getTime() });\n                }}\n                showTimeSelect\n                timeFormat=\"HH:mm\"\n                timeIntervals={10}\n                minDate={new Date().setDate(new Date().getDate() - 5)}\n                maxDate={searchParameters.end}\n                timeCaption=\"time\"\n                dateFormat=\"MMMM d, yyyy h:mm:ss aa\"\n              />\n            </FormValue>\n          </FormElement>\n          <FormElement>\n            <FormLabel>End</FormLabel>\n            <FormValue>\n              <DatePicker\n                selected={searchParameters.end}\n                onChange={(date) => {\n                  setLiveMode(false);\n                  setSearchParamters({ ...searchParameters, end: new Date(date).getTime() });\n                }}\n                showTimeSelect\n                timeFormat=\"HH:mm\"\n                timeIntervals={15}\n                minDate={searchParameters.start}\n                maxDate={new Date()}\n                timeCaption=\"time\"\n                dateFormat=\"MMMM d, yyyy h:mm:ss aa\"\n              />\n            </FormValue>\n          </FormElement>\n          <FormElement>\n            <FormLabel>Url Keyword</FormLabel>\n            <FormValue>\n              <input\n                value={searchParameters.urlKeyword}\n                onChange={(e) => {\n                  setSearchParamters({\n                    ...searchParameters,\n                    urlKeyword: e.target.value,\n                  });\n                }}\n              />\n              <FilterSwitch\n                onClick={() => {\n                  setSearchParamters({\n                    ...searchParameters,\n                    urlKeyword: \"\",\n                  });\n                }}\n              >\n                Clear\n              </FilterSwitch>\n            </FormValue>\n          </FormElement>\n\n          <FormElement>\n            <FormLabel>Trace Id</FormLabel>\n            <FormValue>\n              <input\n                value={searchParameters.traceId}\n                onChange={(e) => {\n                  setSearchParamters({\n                    ...searchParameters,\n                    traceId: e.target.value,\n                  });\n                }}\n              />\n              <FilterSwitch\n                onClick={() => {\n                  setSearchParamters({\n                    ...searchParameters,\n                    traceId: \"\",\n                  });\n                }}\n              >\n                Clear\n              </FilterSwitch>\n            </FormValue>\n          </FormElement>\n\n          <FormElement>\n            <FormLabel>Count</FormLabel>\n            <FormValue>\n              <select onChange={(e)=>{\n                setSearchParamters({\n                  ...searchParameters,\n                  resultsLimit:e.target.value\n                })\n              }}>\n                <option>10</option>\n                <option>50</option>\n                <option>100</option>\n              </select>\n            </FormValue>\n          </FormElement>\n        </FilterForm>\n        <FilterSwitch\n          onClick={() => {\n            setCollapsedState(true);\n          }}\n        >\n          Hide Filters\n        </FilterSwitch>\n      </FilterBarContainer>\n    );\n  }\n}\nexport default FilterBar;\n","import mockData from \"../../Components/mockData\";\nimport Axios from \"axios\";\n\nexport function getActions(searchParamters){\n    return Axios.get(\"/hera-data-source\",{params:searchParamters}).then((response)=>{\n        return response.data.results;\n    });\n    return new Promise((resolve)=>{\n        console.log(\"Getting data\");\n        setTimeout(()=>{\n            console.log(\"Got data\");\n            resolve(mockData.results)\n        },1000);\n    })\n}","import styled from 'styled-components';\nimport { getColor } from '../../../colors';\n\nexport const ActionsListContainer=styled.div`\n    width:70%;\n    background-color:${getColor()}22;\n    height:100%;\n    overflow-y:scroll;\n`;","import styled from \"styled-components\";\nimport { getColor } from \"../../../../colors\";\n\nexport const ActionLineContainer = styled.div`\n  margin: 5px;\n  padding: 10px;\n  display: flex;\n  background-image: linear-gradient(to right, ${getColor()}33, ${getColor()}44);\n  align-items: center;\n  border-radius: 5px;\n  white-space: nowrap;\n  ${(props) =>\n    props.active &&\n    `\n    background-image: linear-gradient(to right, #fff, #eee);\n  font-weight:bold;`}\n`;\n\nexport const Time = styled.div`\n  width: 10vw;\n  font-size: 12px;\n  white-space: nowrap;\n`;\nexport const TraceId = styled.div`\n  font-family: monospace;\n  margin-right: 1vw;\n  white-space: nowrap;\n`;\nexport const Endpoint = styled.div`\n  width: 30vw;\n  overflow-y: scroll;\n  white-space: nowrap;\n  margin: 0 1vw;\n  white-space: nowrap;\n`;\nexport const Status = styled.div`\n  width: 2vw;\n  color: ${(props) => (props.good ? \"#060\" : \"#d00\")};\n  white-space: nowrap;\n`;\nexport const APICalls = styled.div`\n  width: 5vw;\n  white-space: nowrap;\n`;\nexport const TimeTaken = styled.div`\n  width: 2vw;\n  white-space: nowrap;\n`;\n","import React from \"react\";\nimport {\n  ActionLineContainer,\n  Time,\n  TraceId,\n  Endpoint,\n  Status,\n  APICalls,\n  TimeTaken,\n} from \"./styles\";\nimport { getDurationText } from \"../../../../utils\";\n\nfunction getAPICallCount(types){\n    return types.filter((type)=>type.includes(\"API_INITIATED\")).length\n}\nfunction ActionLine({ action, onClick, active }) {\n  return (\n    <ActionLineContainer onClick={onClick} active={active}>\n      <Time>{action.endTime}</Time>\n      <TraceId active={active}>{action.traceId}</TraceId>\n      <Endpoint>\n        {action.logs.NODE_INITIATED.method} {action.logs.NODE_INITIATED.url}\n      </Endpoint>\n      <Status good={(action.logs.NODE_COMPLETE || action.logs.NODE_FAILED).responseCode === 200}>\n        {(action.logs.NODE_COMPLETE || action.logs.NODE_FAILED).responseCode}\n      </Status>\n      <APICalls>{getAPICallCount(Object.keys(action.logs))} API Calls</APICalls>\n      <TimeTaken>{getDurationText(action.timeTaken)}</TimeTaken>\n    </ActionLineContainer>\n  );\n}\n\nexport default ActionLine;\n","import React from \"react\";\nimport { ActionsListContainer } from \"./styles\";\nimport ActionLine from \"./ActionLine\";\n\nfunction ActionsList({ actions, selectedAction, setSelectedAction }) {\n  return (\n    <ActionsListContainer>\n      {Object.values(actions)\n        .sort((b, a) => {\n          return (\n            (a.logs.NODE_COMPLETE || a.logs.NODE_FAILED).accurateTime -\n            (b.logs.NODE_COMPLETE || b.logs.NODE_FAILED).accurateTime\n          );\n        })\n        .map((action) => {\n          return (\n            <ActionLine\n              action={action}\n              onClick={() => setSelectedAction(action)}\n              active={action.traceId === selectedAction.traceId}\n            />\n          );\n        })}\n    </ActionsListContainer>\n  );\n}\n\nexport default ActionsList;\n","import styled from 'styled-components';\n\nexport const ActionDetailsContainer=styled.div`\n    width:30vw;\n    height:100%;\n    overflow-y:scroll;\n`;\nexport const ActionTraceId=styled.div`\n    font-size:20px;\n    font-family:monospace;\n    text-align:center;\n    padding:10px 0px;\n    width:100%;\n\n`;\nexport const ActionLogs=styled.div``;","import styled from \"styled-components\";\nimport { getColor } from \"../../../../colors\";\nexport const ActionSummaryContainer = styled.div`\n  margin: 10px;\n  box-sizing: border-box;\n  padding:10px;\n  background-image: linear-gradient(to bottom right, ${getColor()}22, ${getColor()}33);\n`;\nexport const Title = styled.div`\n    font-weight:bold;\n    font-size:18px;\n    \n`;\nexport const Info = styled.div`\n    margin:5px 0px;\n    width:100%;\n    word-wrap:break-word;\n    overflow-x:scroll;\n\n`;\nexport const Label = styled.div`\n    font-size:12px;\n    font-weight:bold;\n`;\nexport const Value = styled.div`   \n    font-size:14px;\n`;","import React from \"react\";\nimport { ActionSummaryContainer, Title, Info, Label, Value } from \"./styles\";\nimport { printDateTime, getDurationText } from \"../../../../utils\";\nimport ReactJson from \"react-json-view\";\n/**\n *\n * This shows following details:\n * The URL and method of node.\n * All subsequent API endpoints\n * Time taken\n * Request\n * Response\n */\n\nfunction ActionSummary({ action }) {\n  return (\n    <ActionSummaryContainer>\n      <Title>Action Summary</Title>\n      <Info>\n        <Label>Url</Label>\n        <Value>\n          {action.logs.NODE_INITIATED.method} {action.logs.NODE_INITIATED.url}\n        </Value>\n      </Info>\n\n      <Info>\n        <Label>Time Started</Label>\n        <Value>{printDateTime(action.logs.NODE_INITIATED.accurateTime)}</Value>\n      </Info>\n\n      <Info>\n        <Label>Time Ended</Label>\n        <Value>\n          {printDateTime(\n            (action.logs.NODE_FAILED || action.logs.NODE_COMPLETE).accurateTime\n          )}\n        </Value>\n      </Info>\n\n      <Info>\n        <Label>Time Taken</Label>\n        <Value>\n          {getDurationText(\n            (action.logs.NODE_FAILED || action.logs.NODE_COMPLETE)\n              .accurateTime - action.logs.NODE_INITIATED.accurateTime\n          )}\n        </Value>\n      </Info>\n\n      <Info>\n        <Label>Request</Label>\n        <Value>\n          {typeof action.logs.NODE_INITIATED.request === \"string\" ? (\n            action.logs.NODE_INITIATED.request\n          ) : (\n            <ReactJson src={action.logs.NODE_INITIATED.request} />\n          )}\n          <ReactJson src={action.logs.NODE_INITIATED.request} name={false} />\n        </Value>\n      </Info>\n\n      <Info>\n        <Label>Response Code</Label>\n        <Value>\n          {(action.logs.NODE_FAILED || action.logs.NODE_COMPLETE).responseCode}\n        </Value>\n      </Info>\n\n      <Info>\n        <Label>Response</Label>\n        <Value>\n          {typeof (action.logs.NODE_FAILED || action.logs.NODE_COMPLETE)\n            .response === \"string\" ? (\n            (action.logs.NODE_FAILED || action.logs.NODE_COMPLETE).response\n          ) : (\n            <ReactJson\n              src={\n                (action.logs.NODE_FAILED || action.logs.NODE_COMPLETE).response\n              }\n            />\n          )}\n        </Value>\n      </Info>\n\n      <Info>\n        <Label>Intermediate APIs</Label>\n        <Value>\n          {Object.keys(action.logs).filter((log) =>\n            log.includes(\"API_INITIATED\")\n          ).length === 0\n            ? \"None\"\n            : Object.values(action.logs)\n                .filter((log) => log.type.includes(\"API_INITIATED\"))\n                .map((log) => {\n                  return <div>{log.url}</div>;\n                })}\n        </Value>\n      </Info>\n    </ActionSummaryContainer>\n  );\n}\nexport default ActionSummary;\n","import styled from 'styled-components';;\nexport const LogsListContainer=styled.div`\n    padding:10px;\n`;\nexport const Title=styled.div`\n    font-size:14px;\n    font-weight:bold;\n`;","import styled from 'styled-components';\nimport { getColor } from '../../../../../colors';\n\nexport const LogLineContainer = styled.div`\n    border:solid 1px ${getColor()};\n    margin:10px 0px;\n`;\nexport const LogHeader = styled.div`\n    background-color:${getColor()}bb;\n    color:#fff;\n    display:flex;\n    padding:10px;\n    justify-content:space-between;\n`;\nexport const Time = styled.div``;\nexport const Type = styled.div``;\nexport const LogBody=styled.div`\n    padding:15px;\n`;","import React, { useState } from \"react\";\nimport { LogLineContainer, LogHeader, Time, Type, LogBody } from \"./styles\";\nimport { printDateTime } from \"../../../../../utils\";\nimport { Info, Label, Value } from \"../../ActionSummary/styles\";\nimport ReactJson from \"react-json-view\";\n\nfunction getResponseBody(log) {\n  return (\n    <>\n      <Info>\n        <Label>Response Code</Label>\n        <Value>{log.responseCode}</Value>\n      </Info>\n\n      <Info>\n        <Label>Response</Label>\n        <Value>\n          {typeof log.response === \"string\" ? (\n            log.response\n          ) : (\n            <ReactJson src={log.response} />\n          )}\n        </Value>\n      </Info>\n    </>\n  );\n}\n\nfunction LogLine({ log }) {\n  const [collapsed, setCollapsedState] = useState(true);\n  return (\n    <LogLineContainer>\n      <LogHeader\n        onClick={() => {\n          setCollapsedState(!collapsed);\n        }}\n      >\n        <Time>{printDateTime(log.accurateTime)}</Time>\n        <Type>{log.type}</Type>\n      </LogHeader>\n      {!collapsed && (\n        <LogBody>\n          <Info>\n            <Label>Method</Label>\n            <Value>{log.method}</Value>\n          </Info>\n          <Info>\n            <Label>URL</Label>\n            <Value>{log.url}</Value>\n          </Info>\n\n          <Info>\n            <Label>Headers</Label>\n            <Value>\n              {\" \"}\n              {typeof log.headers === \"string\" ? (\n                log.headers\n              ) : (\n                <ReactJson src={log.headers} />\n              )}\n            </Value>\n          </Info>\n\n          <Info>\n            <Label>Request</Label>\n            <Value>\n              {\" \"}\n              {typeof log.request === \"string\" ? (\n                log.request\n              ) : (\n                <ReactJson src={log.request} />\n              )}\n            </Value>\n          </Info>\n\n          {(log.type.includes(\"COMPLETE\") || log.type.includes(\"FAILED\")) &&\n            getResponseBody(log)}\n        </LogBody>\n      )}\n    </LogLineContainer>\n  );\n}\nexport default LogLine;\n","import React from 'react';\nimport { LogsListContainer,Title } from './styles';\nimport LogLine from './LogLine';\n\nfunction LogsList({logs}){\n    return <LogsListContainer>\n        <Title>Logs</Title>\n        {\n            logs.map(log=>{\n                return <LogLine log={log}/>\n            })\n        }\n    </LogsListContainer>\n}\n\nexport default LogsList;","import React,{useState,useEffect} from 'react';\nimport { ActionDetailsContainer,ActionTraceId,ActionLogs } from './styles';\nimport ActionSummary from './ActionSummary';\nimport { getActions } from '../service';\nimport LogsList from './LogsList';\n\nfunction ActionDetails({selectedAction}){\n    const [action, setAction] = useState({});\n    useEffect(() => {\n        getActions({traceId:selectedAction.traceId}).then(recievedActions=>{\n            console.log(Object.values(recievedActions)[0])\n            setAction(Object.values(recievedActions)[0])\n        });\n    }, [selectedAction]);\n    if(!selectedAction || !action){\n        return <ActionDetailsContainer><ActionTraceId>Choose an action</ActionTraceId></ActionDetailsContainer>\n    }\n    return <ActionDetailsContainer>\n        <ActionTraceId>{action.traceId}</ActionTraceId>\n        <ActionSummary action={action}/>\n        <LogsList logs={Object.values(action.logs)}/>\n    </ActionDetailsContainer>;\n}\n\nexport default ActionDetails","import React, { useState, useEffect } from \"react\";\nimport { ActionBrowserContainer,ActionBrowserBody } from \"./styles\";\nimport FilterBar from \"./FilterBar\";\nimport { getActions } from \"./service\";\nimport ActionsList from \"./ActionsList\";\nimport ActionDetails from \"./ActionDetails\";\n\nfunction ActionBrowser() {\n  const [searchParameters, setSearchParameters] = useState({\n    resultsLimit:10,\n    start:new Date().setHours(new Date().getHours()-1),\n    end:new Date().getTime()\n  });\n  const [isLiveMode, setLiveMode] = useState(false);\n  const [actions, setActions] = useState({});\n  const [selectedAction, setSelectedAction] = useState(false);\n  const [liveFetcher,setLiveFetcher] = useState(false);\n  useEffect(()=>{\n    if(isLiveMode){\n      if(liveFetcher){\n        clearInterval(liveFetcher);\n        setLiveFetcher(false);\n      }\n      setLiveFetcher(setInterval(()=>{\n        setSearchParameters({\n          ...searchParameters,\n          start:new Date().setHours(new Date().getHours()-1),\n          end:new Date().getTime()\n        })\n      },1000));\n    }\n    else{\n      clearInterval(liveFetcher);\n      setLiveFetcher(false);\n    }\n  },[isLiveMode,searchParameters])\n  useEffect(() => {\n    getActions(searchParameters).then(recievedActions=>{\n      setActions(recievedActions);\n    })\n  }, [searchParameters]);\n\n  return (\n    <ActionBrowserContainer>\n      <FilterBar\n        searchParameters={searchParameters}\n        setSearchParamters={setSearchParameters}\n        isLiveMode={isLiveMode}\n        setLiveMode={setLiveMode}\n      />\n      <ActionBrowserBody>\n        <ActionsList actions={actions} selectedAction={selectedAction} setSelectedAction={setSelectedAction}/>\n        <ActionDetails selectedAction={selectedAction}/>\n      </ActionBrowserBody>\n    </ActionBrowserContainer>\n  );\n}\nexport default ActionBrowser;\n","import styled from 'styled-components';\nexport const APIHealthContainer=styled.div``;","import React from 'react';\nimport { APIHealthContainer } from './styles';\n\nfunction APIHealth(){\n    return <APIHealthContainer>\n        API Browser\n    </APIHealthContainer>\n}\nexport default APIHealth;\n","import React from 'react';\nimport { BodyContainer } from './styles';\nimport ActionBrowser from '../../Pages/ActionBrowser';\nimport APIHealth from '../../Pages/APIHealth';\n\nfunction Body({currentTab}){\n    return <BodyContainer>\n        {\n            currentTab===\"actionBrowser\" && <ActionBrowser/>\n        }\n        {\n            currentTab===\"apiHealth\" && <APIHealth/>\n        }\n    </BodyContainer>\n}\n\nexport default Body;","import React,{useState} from 'react';\nimport { AppContainer } from './styles';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport Header from './Components/Header';\nimport Body from './Components/Body';\n\nfunction HeraDashboard(){\n    const [currentTab, setCurrentTab] = useState(\"actionBrowser\");\n    return <AppContainer>\n        <Router>\n        <Header setCurrentTab={setCurrentTab} currentTab={currentTab}/>\n        <Body currentTab={currentTab}/>\n        </Router>\n    </AppContainer>;\n}\nexport default HeraDashboard","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport HeraDashboard from './HeraDashboard';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HeraDashboard />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}